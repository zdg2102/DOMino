{"version":3,"sources":["webpack/bootstrap 1b8a15197c92e1092c3f","./js/main.js","./js/snake.js","./js/snake-view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;;AAEA,EAAC;;;;;;;ACLD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,gBAAgB;AAChC;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACjDA;;AAEA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1b8a15197c92e1092c3f\n **/","var Snake = require(\"./snake\");\nvar SnakeView = require(\"./snake-view\");\n\n$l(function () {\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var STEPS = {\n\tN: [-1, 0],\n\tE: [0, 1],\n\tS: [1, 0],\n\tW: [0, -1]\n};\n\nvar Snake = function (startPos) {\n\tthis.direction = null;\n\t// 0 is the head, last is the tail\n\tthis.segments = [startPos, [startPos[0] - 1, startPos[1]]];\n};\n\nSnake.prototype.move = function () {\n\tif (this.direction === null) return;\n\tvar step = STEPS[this.direction];\n\tvar nextStep = [this.segments[0][0] + step[0], this.segments[0][1] + step[1]];\n\tthis.segments.pop();\n\tthis.segments.unshift(nextStep);\n};\n\nSnake.prototype.grow = function (numSquares) {\n\tfor (var i = 0; i < numSquares; i++) {\n\t\tthis.segments.push(this.segments[this.segments.length - 1]);\n\t}\n};\n\nSnake.prototype.isCollidedSelf = function () {\n  var head = this.segments[0];\n\tfor (var i = 1; i < this.segments.length; i++) {\n\t\tif (head[0] === this.segments[i][0] &&\n\t\t  head[1] === this.segments[i][1]) {\n\t\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\n\nSnake.prototype.turn = function (direction) {\n\tvar currentStep = STEPS[this.direction];\n\tvar newStep = STEPS[direction];\n\n\tif (currentStep[0] + newStep[0] === 0 && currentStep[1] + newStep[1] === 0) {\n\t\treturn;\n\t}\n\n\tthis.direction = direction;\n};\n\nmodule.exports = Snake;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 1\n ** module chunks = 0\n **/","var SnakeView = function (game) {\n\n};\n\nmodule.exports = SnakeView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake-view.js\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}