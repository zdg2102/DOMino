{"version":3,"sources":["webpack/bootstrap 9fbe9cd5c51912046738","./js/main.js","./js/board.js","./js/snake.js","./js/snake-view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACPD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,sCAAsC;AACzD,kBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACrDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,yCAAyC;AAC1D;AACA;AACA;AACA;;AAEA,cAAa,yCAAyC;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9fbe9cd5c51912046738\n **/","var Board = require(\"./board\");\nvar SnakeView = require(\"./snake-view\");\n\n$d(function () {\n  var $gameFigure = $d(\"figure\");\n  var board = new Board();\n  var view = new SnakeView(board, $gameFigure);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var Snake = require(\"./snake.js\");\n\nvar Board = function () {\n  this.height = 30;\n  this.width = 30;\n  this.snakeOne = new Snake(this.getRandomPos());\n  this.snakeTwo = new Snake(this.getRandomPos());\n  this.apple = null;\n  this.addApple();\n};\n\nBoard.prototype.getRandomPos = function () {\n  // margin of 1 added on each edge to make sure\n  // random position is never returned in first or\n  // last row or column\n  return [1 + Math.floor(Math.random() * (this.height - 2)),\n    1 + Math.floor(Math.random() * (this.width - 2))];\n};\n\nBoard.prototype.addApple = function () {\n  var applePos = this.getRandomPos();\n  while (this.isOccupied(applePos)) {\n    applePos = this.getRandomPos();\n  }\n  this.apple = applePos;\n};\n\nBoard.prototype.isOccupied = function (pos) {\n  var occupiedSquares = this.snakeOne.segments\n    .concat(this.snakeTwo.segments);\n  if (this.apple) { occupiedSquares.concat([this.apple]); }\n  for (var i = 0; i < occupiedSquares.length; i++) {\n    if (pos[0] === occupiedSquares[i][0] &&\n      pos[1] === occupiedSquares[i][1]) {\n      return true;\n    }\n  }\n  return false;\n};\n\nBoard.prototype.isSnakeHitWall = function (snake) {\n  var head = snake.segments[0];\n  if (head[0] < 0 || head[0] >= this.height ||\n    head[1] < 0 || head[1] >= this.width) {\n    return true;\n  }\n  return false;\n};\n\nBoard.prototype.isSnakeHitOtherSnake = function (snakeA, snakeB) {\n  var head = snakeA.segments[0];\n  for (var i = 0; i < snakeB.segments.length; i++) {\n    if (head[0] === snakeB.segments[i][0] &&\n      head[1] === snakeB.segments[i][1]) {\n      return true;\n    }\n  }\n  return false;\n};\n\nBoard.prototype.isSnakeEatApple = function (snake) {\n  if (this.apple) {\n    var head = snake.segments[0];\n    if (head[0] === this.apple[0] &&\n      head[1] === this.apple[1]) {\n      return true;\n    }\n  }\n  return false;\n};\n\nBoard.prototype.isGameOver = function () {\n  return this.isSnakeHitWall(this.snakeOne) ||\n    this.isSnakeHitWall(this.snakeTwo) ||\n    this.snakeOne.isCollidedSelf() ||\n    this.snakeTwo.isCollidedSelf() ||\n    this.isSnakeHitOtherSnake(this.snakeOne, this.snakeTwo) ||\n    this.isSnakeHitOtherSnake(this.snakeTwo, this.snakeOne);\n};\n\nBoard.prototype.step = function () {\n  if (!this.isGameOver()) {\n    if (this.isSnakeEatApple(this.snakeOne)) {\n      this.snakeOne.grow(1);\n      this.addApple();\n    }\n\n    if (this.isSnakeEatApple(this.snakeTwo)) {\n      this.snakeTwo.grow(1);\n      this.addApple();\n    }\n\n    this.snakeOne.move();\n    this.snakeTwo.move();\n  }\n};\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/board.js\n ** module id = 1\n ** module chunks = 0\n **/","var STEPS = {\n  N: [-1, 0],\n  E: [0, 1],\n  S: [1, 0],\n  W: [0, -1]\n};\n\nvar Snake = function (startPos) {\n  this.direction = null;\n  // 0 is the head, last is the tail\n  this.segments = [startPos, [startPos[0] - 1, startPos[1]]];\n  this.nextDirection = this.direction;\n};\n\nSnake.prototype.move = function () {\n  this.direction = this.nextDirection;\n  if (this.direction === null) { return; }\n  var step = STEPS[this.direction];\n  var nextStep = [this.segments[0][0] + step[0],\n    this.segments[0][1] + step[1]];\n  this.segments.pop();\n  this.segments.unshift(nextStep);\n};\n\nSnake.prototype.grow = function (numSquares) {\n  for (var i = 0; i < numSquares; i++) {\n    this.segments.push(this.segments[this.segments.length - 1]);\n  }\n};\n\nSnake.prototype.isCollidedSelf = function () {\n  var head = this.segments[0];\n  for (var i = 1; i < this.segments.length; i++) {\n    if (head[0] === this.segments[i][0] &&\n      head[1] === this.segments[i][1]) {\n      return true;\n    }\n  }\n  return false;\n};\n\nSnake.prototype.turn = function (direction) {\n  // give a value guaranteed to evaluate false if direction is null\n  var currentStep = STEPS[this.direction] || [-2, -2];\n  var newStep = STEPS[direction];\n  if (currentStep[0] + newStep[0] === 0 &&\n    currentStep[1] + newStep[1] === 0) {\n    // avoid turning backwards into itself\n    return;\n  }\n  this.nextDirection = direction;\n};\n\nmodule.exports = Snake;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 2\n ** module chunks = 0\n **/","var Board = require('./board');\n\n// up is 38\n// right is 39\n// left is 37\n// down is 40\nvar SNAKE_ONE_CODE = {\n  38: \"N\",\n  39: \"E\",\n  37: \"W\",\n  40: \"S\"\n};\n\n// W is 87\n// D is 68\n// S is 83\n// A is 65\nvar SNAKE_TWO_CODE = {\n  87: \"N\",\n  68: \"E\",\n  65: \"W\",\n  83: \"S\"\n};\n\nvar SnakeView = function (board, $gameFigure) {\n  this.board = board;\n  this.$gameFigure = $gameFigure;\n  this.setUpBoard();\n  this.render();\n  this.bindKeys();\n\n  this.intervalHandler = setInterval(this.step.bind(this), 75);\n};\n\nSnakeView.prototype.bindKeys = function () {\n  $d(\"body\").on('keydown', this.handleKeyEvent.bind(this));\n};\n\nSnakeView.prototype.handleKeyEvent = function (e) {\n  if (SNAKE_ONE_CODE[e.keyCode]) {\n    this.board.snakeOne.turn(SNAKE_ONE_CODE[e.keyCode]);\n  }\n  if (SNAKE_TWO_CODE[e.keyCode]) {\n    this.board.snakeTwo.turn(SNAKE_TWO_CODE[e.keyCode]);\n  }\n  // 32 is keycode for spacebar\n  if (this.board.isGameOver() && e.keyCode == 32) {\n    this.resetGame();\n  }\n};\n\nSnakeView.prototype.resetGame = function () {\n  this.$gameFigure.find('.restart-modal').remove();\n  this.board = new Board();\n  this.render();\n\n  this.intervalHandler = setInterval(this.step.bind(this), 75);\n};\n\nSnakeView.prototype.step = function () {\n  this.board.step();\n  if (this.board.isGameOver()) {\n    window.clearInterval(this.intervalHandler);\n    this.renderDeath();\n  }\n  this.render();\n};\n\nSnakeView.prototype.setUpBoard = function () {\n  var numSquares = this.board.height * this.board.width;\n  this.$gameFigure.append(\"<ul></ul>\");\n  var $gameUl = this.$gameFigure.find(\"ul\");\n  $gameUl.addClass('group');\n  for (var i = 0; i < numSquares; i++) {\n    $gameUl.append(\"<li id='id\" + i + \"'></li>\");\n  }\n};\n\nSnakeView.prototype.render = function () {\n  this.$gameFigure.find('li').removeClass();\n  for (var i = 0; i < this.board.snakeOne.segments.length; i++) {\n    var snakeOneId = this.posToId(this.board.snakeOne.segments[i]);\n    var $snakeOneSquare = $d(\"#id\" + snakeOneId);\n    $snakeOneSquare.addClass('snake-one-square');\n  }\n\n  for (i = 0; i < this.board.snakeTwo.segments.length; i++) {\n    var snakeTwoId = this.posToId(this.board.snakeTwo.segments[i]);\n    var $snakeTwoSquare = $d(\"#id\" + snakeTwoId);\n    $snakeTwoSquare.addClass('snake-two-square');\n  }\n\n  if (this.board.apple) {\n    var appleId = this.posToId(this.board.apple);\n    var $appleSquare = $d('#id' + appleId);\n    $appleSquare.addClass('apple-square');\n  }\n  if (this.board.isGameOver()) {\n    this.$gameFigure.append('<div class=\"restart-modal\"></div>');\n  }\n};\n\nSnakeView.prototype.renderDeath = function () {\n  // use timeout to allow one additional frame for modal to be\n  // rendered\n  setTimeout(function () {\n    $modal = this.$gameFigure.find('.restart-modal');\n    $modal.append('<p class=\"restart-text\">You died<br>' +\n      'Press space to play again</p>');\n  }.bind(this), 75);\n};\n\nSnakeView.prototype.posToId = function (pos) {\n  // converts from grid position to the id number of the\n  // corresponding \"li\" element in the view\n  return pos[0] * this.board.height + pos[1];\n};\n\nmodule.exports = SnakeView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake-view.js\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}